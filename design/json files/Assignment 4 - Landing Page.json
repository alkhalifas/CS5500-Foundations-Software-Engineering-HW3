[{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700097175853,"type":"auto","id":"ecc752a7-739b-4d8d-a898-09c771504d3e","name":"sticky-airport"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: questionList\n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Server: .Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700097115853,"type":"auto","id":"c800511a-3879-4aa6-b4b3-12c7bde656dd","name":"uptight-autumn"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096995851,"type":"auto","id":"d9c48ae1-9058-4c2f-8484-099a2dabdb88","name":"rotten-father"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: questionsSort(newest)\n    Server-->>-Application: \n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096935853,"type":"auto","id":"febaf7dd-203b-4952-bc3c-100ebfb68cf0","name":"greasy-ability"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n    Server-->>+Server: sort()\n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096875854,"type":"auto","id":"27b3588a-945a-499b-bd02-b025344cd4fb","name":"abiding-pharmacist"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer-->>+Question: \n    Question-->>-Server: \n\n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096815851,"type":"auto","id":"fcc349a0-03b6-4b6a-8192-def600647e20","name":"rancid-death"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question->>Answer: Answers.find(_id)\n    Answer\n    %% Answer-->>-Question: \n    %% Question-->>-Server: \n\n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096755840,"type":"auto","id":"07d4d0ef-d66f-43bd-83c5-d73104eeb99e","name":"drab-finland"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n\n    Question->>Answer: Answers.find(_id)\n    Question-->>-Server: \n\n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096695836,"type":"auto","id":"7e0b6133-3792-4baa-8fbd-13d7a9192d71","name":"calm-receptionist"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n    Question-->>-Server: \n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096636590,"type":"auto","id":"c78ab0d3-31be-43e1-a116-b7a927d1aa8b","name":"limited-analyst"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n    Tag-->>-Question: \n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096575840,"type":"auto","id":"d81fc4cb-70f9-4e00-9da2-29a3ac51e424","name":"hallowed-petabyte"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions(sortType)\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096515834,"type":"auto","id":"621b3097-a4f4-4fad-9beb-8d010bccd12c","name":"rough-church"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions()\n    Server->>+Question: Questions.find()\n    Question->>+Tag: .populate('tags')\n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096455838,"type":"auto","id":"f141057a-5d1d-4028-a39a-2ce27403b0a8","name":"shallow-book"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions()\n    Server->>+Question: Questions.find()\n    Question->>+Answer: \n\n    %% Question-->>-Server: \n    %% Question->>+Answer: find() \n    %% Answer-->>-Question: \n\n    %% Question->>+DataModel(Tag): getTagsWithNames()\n    %% DataModel(Tag)-->>-Question: \n\n    %% Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096395840,"type":"auto","id":"11b6fdd4-b4b2-4311-894f-274865ed4958","name":"bored-china"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions()\n    Server->>+Question: Questions.find()\n    Question-->>-Server: \n    Question->>+Answer: find() \n    Answer-->>-Question: \n\n    Question->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-Question: \n\n    Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096335839,"type":"auto","id":"3aeb3f8e-f711-48b1-941c-e40184c691ec","name":"wooden-psychiatrist"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getQuestions()\n    Server->>+Question: Questions.F()\n    Question-->>-Application: \n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Question: getQuestionAnswers()\n\n    Question->>+Answer: find()\n    Answer-->>-Question: \n\n    Question->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-Question: \n\n    Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096275839,"type":"auto","id":"a044bdb1-f327-421c-9bd8-93088ed35ef0","name":"alert-rain"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Server: getAllQuestions()\n    Server->>+Question: getAllQuestions()\n    Question-->>-Application: \n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Question: getQuestionAnswers()\n\n    Question->>+Answer: find()\n    Answer-->>-Question: \n\n    Question->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-Question: \n\n    Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700096215835,"type":"auto","id":"2d1e753c-941f-44dc-a7bc-6cea57686757","name":"lazy-arm"},{"state":{"code":"sequenceDiagram\n    User->>+Application: Request Landing Page\n    Application->>+Question: getAllQuestions()\n    Question-->>-Application: \n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Question: getQuestionAnswers()\n\n    Question->>+Answer: find()\n    Answer-->>-Question: \n\n    Question->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-Question: \n\n    Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1700095796586,"type":"auto","id":"c5ae4af1-6124-405b-b571-cd50722a4f7d","name":"chubby-death"},{"state":{"code":"flowchart TD\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me think}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[fa:fa-car Car]\n  ","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"updateDiagram":true},"time":1700095436584,"type":"auto","id":"868da110-5f5d-44af-a11e-9daa82721c12","name":"sweet-holiday"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+Question: getAllQuestions()\n    Question-->>-Application: \n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Question: getQuestionAnswers()\n\n    Question->>+Answer: find()\n    Answer-->>-Question: \n\n    Question->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-Question: \n\n    Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698796674445,"type":"auto","id":"8fe00a64-2304-403e-a513-b6529da74cc9","name":"bulky-library"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+Question: getAllQuestions()\n    Question-->>-Application: \n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Question: getQuestionAnswers()\n\n    Question->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-Question: \n\n    Question->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-Question: \n\n    Question-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+Question: Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698796554452,"type":"auto","id":"6fabd6c3-9523-4938-a705-203150624734","name":"wooden-area"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-DataModel(Question): \n\n    DataModel(Question)->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-DataModel(Question): \n\n    DataModel(Question)-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+DataModel(Question): Newest.Click()\n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+Application: setSortedQuestions(List: Question)\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794449520,"type":"manual","id":"aae79fd3-cda8-4c18-8f34-ab7ce323a39b","name":"hissing-adult"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: handleSort(String: OrderType)\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-DataModel(Question): \n\n    DataModel(Question)->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-DataModel(Question): \n\n    DataModel(Question)-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+DataModel(Question): Newest.Click()\n    Application-->>+Application: handleSort(String: OrderType)\n    DataModel(Question)-->>+Application: Newest.Click()\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794392033,"type":"auto","id":"d75e36de-756f-48b1-a117-1af4f796a54e","name":"tangy-afternoon"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: handleSort(String: )\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-DataModel(Question): \n\n    DataModel(Question)->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-DataModel(Question): \n\n    DataModel(Question)-->>-Application: questionList\n\n    User->>+Application: Order Preference\n    Application->>+DataModel(Question): Newest.Click()\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794332034,"type":"auto","id":"8ac5e7db-f48a-4db1-8ef3-4837e87f0a1e","name":"chilly-secretary"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: setSortedQuestions()\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-DataModel(Question): \n\n    DataModel(Question)->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-DataModel(Question): \n\n    DataModel(Question)-->>-Application: questionList\n\n    User->>+Application: Order Preference\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794272033,"type":"auto","id":"4cdcc964-b019-4aee-8fcb-152e58d847bd","name":"appalling-boy"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: setSortedQuestions()\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-DataModel(Question): \n\n    DataModel(Question)->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)-->>-DataModel(Question): ","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794212028,"type":"auto","id":"932f1ecd-6fb0-4767-9229-4b5d76d0e895","name":"absurd-england"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: setSortedQuestions()\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-DataModel(Question): \n\n    DataModel(Question)->>+DataModel(Tag): getTagsWithNames()\n    DataModel(Tag)->>+DataModel(Question): find()","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794152031,"type":"auto","id":"5db1452e-97c4-427a-91a1-b4cecea34100","name":"jolly-lawyer"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: setSortedQuestions()\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Answer)-->>-DataModel(Question): \n\n    DataModel(Question)->>+DataModel(Tag): testing\n    DataModel(Question)->>+DataModel(Tag): testing","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794092035,"type":"auto","id":"8f88c2be-dc01-45d0-bae5-52f3f0d55710","name":"wailing-accountant"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: setSortedQuestions()\n    Application->>+DataModel(Question): getQuestionAnswers()\n    DataModel(Question)->>+DataModel(Answer): find()\n    DataModel(Question)-->>-DataModel(Answer): \n\n    DataModel(Question)->>+DataModel(Tag): testing\n    DataModel(Question)->>+DataModel(Tag): testing","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698794032029,"type":"auto","id":"aa39c150-cc06-4c57-b5e3-4fb2686ea796","name":"boring-hospital"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: setSortedQuestions()\n    Application->>+DataModel(Question): getQuestionAnswers()\n\n    DataModel(Question)->>+DataModel(Tag): testing\n    DataModel(Question)->>+DataModel(Tag): testing","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698793972027,"type":"auto","id":"7cb411fe-1e81-44da-9f9b-366a93ee96a7","name":"witty-chef"},{"state":{"code":"sequenceDiagram\n    %% Alice->>+John: Hello John, how are you?\n    %% Alice->>+John: John, can you hear me?\n    %% John-->>-Alice: Hi Alice, I can hear you!\n    %% John-->>-Alice: I feel great!\n\n    User->>+Application: Request Landing Page\n    Application->>+DataModel(Question): getAllQuestions()\n    DataModel(Question)-->>-Application: \n    Application->>+Application: setSortedQuestions()\n    \n    DataModel(Question)->>+DataModel(Tag): testing\n    DataModel(Question)->>+DataModel(Tag): testing","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code"},"time":1698793732036,"type":"auto","id":"da8fad3c-9a5c-4132-8c48-610f61efebcf","name":"damp-airplane"}]